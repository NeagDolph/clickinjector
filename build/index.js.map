{"version":3,"file":"index.js","mappings":"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","sources":["webpack://app/./injector.js","webpack://app/./listener.js","webpack://app/./script.js","webpack://app/external commonjs \"iohook\"","webpack://app/external commonjs \"robotjs\"","webpack://app/external node-commonjs \"process\"","webpack://app/webpack/bootstrap","webpack://app/webpack/startup"],"sourcesContent":["const robot = require(\"robotjs\");\r\n\r\nclass Injector {\r\n    constructor(button, settings) {\r\n        this.button = button;\r\n        this.injectedClick = false;\r\n        this.settings = settings\r\n        this.clickChance = 1\r\n    }\r\n\r\n    setInjected(val) {\r\n        this.injectedClick = val;\r\n    }\r\n\r\n    \r\n\r\n    injected() {\r\n        return this.injectedClick\r\n    }\r\n\r\n    addClick(cps) {\r\n        //Click Chance\r\n        if (Math.random() > this.clickChance) {\r\n            return;\r\n        } \r\n\r\n        //Inject click in-between\r\n        let timeout = 500 / cps;\r\n\r\n        //Vary click speed by randomized amount based on set variation\r\n        let variation = timeout * this.settings.clickVariation * (Math.random() - 0.5)\r\n        let finalTimeout = (variation + timeout);\r\n\r\n        // console.log(\"CPS:\", cps, \" | Timeout:\", finalTimeout)\r\n\r\n        setTimeout(this.performClick.bind(this), finalTimeout)\r\n    }\r\n\r\n    performClick() {\r\n        let buttonSide = this.button === 1 ? \"left\" : \"right\";\r\n\r\n        this.setInjected(true);\r\n\r\n        // console.log(\"click\")\r\n\r\n        robot.mouseClick(buttonSide);\r\n    }\r\n\r\n\r\n}\r\n\r\nmodule.exports = Injector;","const GamingChair = require(\"./script\");\r\n\r\nclass Listener {\r\n    constructor(button, injector, settings, callback) {\r\n        this.settings = settings;\r\n        this.button = button;\r\n        this.injector = injector\r\n        this.max = settings.max\r\n        this.callback = callback\r\n\r\n        this.clickStart = new Date();\r\n        this.lastClick = new Date();\r\n        this.clicks = 0;\r\n        this.totalclicks = 0;\r\n\r\n        this.increaseMax = this.increaseMax.bind(this);\r\n        this.decreaseMax = this.decreaseMax.bind(this);\r\n    }\r\n\r\n    increaseMax(amount) {\r\n        this.max += amount;\r\n        this.callback(this.button, this.max)\r\n    }\r\n\r\n    decreaseMax(amount) {\r\n        this.max -= amount;\r\n        this.callback(this.button, this.max)\r\n    }\r\n\r\n    hookEvent = (event) => {\r\n        if (event.button === this.button) {\r\n            this.listenClick()\r\n        }\r\n    }\r\n\r\n    get cps() {\r\n        let currentDate = new Date();\r\n\r\n        let sinceStart = (currentDate - this.clickStart) / 1000\r\n\r\n        return this.clicks / (sinceStart)\r\n    }\r\n\r\n    get totalcps() {\r\n        let currentDate = new Date();\r\n\r\n        let sinceStart = (currentDate - this.clickStart) / 1000\r\n\r\n        return this.totalclicks / (sinceStart)\r\n    }\r\n\r\n    listenClick() {\r\n        this.totalclicks++;\r\n\r\n        if (this.totalcps > this.max) return;\r\n\r\n        //Kill injected click events\r\n        if (this.injector.injected()) {\r\n            this.injector.setInjected(false);\r\n            return;\r\n        }\r\n\r\n        this.clicks++\r\n        let current = new Date();\r\n\r\n        //Reset on break\r\n        if (current - this.lastClick >= this.settings.timeout) {\r\n            this.clicks = 0;\r\n            this.totalclicks = 0;\r\n            this.clickStart = current;\r\n            this.lastClick = new Date();\r\n            return;\r\n        }\r\n\r\n        //Calc CPS\r\n        let cps = this.cps\r\n\r\n        //Inject clicks\r\n        if (cps > this.settings.minSpeed && this.clicks >= 3) {\r\n            // if (totalcps > this.max) return;\r\n            this.injector.addClick(cps);\r\n        }\r\n\r\n        this.lastClick = new Date();\r\n    }\r\n}\r\n\r\nmodule.exports = Listener;","var process = require('process');\r\nconst ioHook = require('iohook');\r\n\r\nconst Injector = require(\"./injector\");\r\nconst Listener = require(\"./listener\");\r\n\r\nvar settings = {\r\n    \"leftSettings\": {\r\n        \"minSpeed\": 6,\r\n        \"minClicks\": 3,\r\n        \"clickVariation\": 0.1,\r\n        \"timeout\": 200,\r\n        \"max\": 19\r\n    },\r\n    \"rightSettings\": {\r\n        \"minSpeed\": 6,\r\n        \"minClicks\": 2,\r\n        \"clickVariation\": 0.1,\r\n        \"timeout\": 200,\r\n        \"max\": 18\r\n    },\r\n}\r\n\r\nclass GamingChair {\r\n    constructor(callback) {\r\n        //Create injectors\r\n        this.leftInjector = new Injector(1, settings.leftSettings)\r\n        this.rightInjector = new Injector(2, settings.rightSettings)\r\n\r\n        //Register listeners\r\n        this.leftListener = new Listener(1, this.leftInjector, settings.leftSettings, callback)\r\n        this.rightListener = new Listener(2, this.rightInjector, settings.rightSettings, callback)\r\n\r\n        this.ctrlPressed = false;\r\n        this.altPressed = false;\r\n\r\n\r\n        ioHook.on(\"mousedown\", (event) => {\r\n            this.leftListener.hookEvent(event);\r\n            this.rightListener.hookEvent(event);\r\n        })\r\n\r\n        ioHook.on(\"keyup\", this.keyup)\r\n\r\n        ioHook.on(\"keydown\", this.keydown)\r\n        \r\n\r\n        //Stark hook\r\n        ioHook.start();\r\n\r\n        if (callback) callback(1, settings.leftSettings.max);\r\n        if (callback) callback(2, settings.leftSettings.max);\r\n    }\r\n\r\n    keyup = (event) => {\r\n        switch (event.keycode) {\r\n            case 29:\r\n                this.ctrlPressed = false\r\n                break;\r\n            case 56:\r\n                this.altPressed = false;\r\n                break;\r\n        }\r\n    }\r\n\r\n    keydown = (event) => {\r\n        switch (event.keycode) {\r\n            case 41:\r\n                if (this.ctrlPressed) this.exitProgram();\r\n                break;\r\n            case 29:\r\n                this.ctrlPressed = true;\r\n                break;\r\n            case 56:\r\n                this.altPressed = true;\r\n                break;\r\n            case 12:\r\n                if (this.ctrlPressed && this.altPressed) this.leftListener.decreaseMax(1);\r\n                break;\r\n            case 13:\r\n                if (this.ctrlPressed && this.altPressed) this.leftListener.increaseMax(1);\r\n                break;\r\n            case 26:\r\n                if (this.ctrlPressed && this.altPressed) this.rightListener.decreaseMax(1);\r\n                break;\r\n            case 27:\r\n                if (this.ctrlPressed && this.altPressed) this.rightListener.increaseMax(1);\r\n                break;\r\n\r\n        }\r\n    }\r\n\r\n    exitProgram() {\r\n        process.exit();\r\n    }\r\n}\r\n\r\nmodule.exports = GamingChair","module.exports = require(\"iohook\");","module.exports = require(\"robotjs\");","module.exports = require(\"process\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(404);\n"],"names":["robot","module","exports","constructor","button","settings","this","injectedClick","clickChance","setInjected","val","injected","addClick","cps","Math","random","timeout","finalTimeout","clickVariation","setTimeout","performClick","bind","buttonSide","mouseClick","injector","callback","max","clickStart","Date","lastClick","clicks","totalclicks","increaseMax","decreaseMax","amount","hookEvent","event","listenClick","sinceStart","totalcps","current","minSpeed","process","ioHook","Injector","Listener","leftInjector","rightInjector","leftListener","rightListener","ctrlPressed","altPressed","on","keyup","keydown","start","keycode","exitProgram","exit","require","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__"],"sourceRoot":""}