{"version":3,"file":"index.js","mappings":"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","sources":["webpack://app/./injector.js","webpack://app/./listener.js","webpack://app/./script.js","webpack://app/external commonjs \"iohook\"","webpack://app/external commonjs \"robotjs\"","webpack://app/external node-commonjs \"child_process\"","webpack://app/external node-commonjs \"fs\"","webpack://app/external node-commonjs \"process\"","webpack://app/webpack/bootstrap","webpack://app/webpack/startup"],"sourcesContent":["const ioHook = require('iohook');\r\nconst robot = require(\"robotjs\");\r\n\r\nclass Injector {\r\n    constructor(button, settings) {\r\n        this.button = button;\r\n        this.injectedClick = false;\r\n        this.settings = settings\r\n        this.clickChance = 1\r\n    }\r\n\r\n    setInjected(val) {\r\n        this.injectedClick = !!val;\r\n    }\r\n\r\n    \r\n\r\n    injected() {\r\n        return this.injectedClick\r\n    }\r\n\r\n    addClick(cps) {\r\n        //Click Chance\r\n        if (Math.random() > this.clickChance) {\r\n            return;\r\n        } \r\n\r\n        //Inject click in-between\r\n        let timeout = 500 / cps\r\n\r\n        //Vary click speed by randomized amount based on set variation\r\n        let variation = timeout * this.settings.clickVariation * (Math.random() - 0.5)\r\n        let finalTimeout = variation + timeout;\r\n\r\n        // console.log(\"CPS:\", cps, \" | Timeout:\", finalTimeout)\r\n\r\n        setTimeout(this.performClick.bind(this), finalTimeout)\r\n    }\r\n\r\n    performClick() {\r\n        let buttonSide = this.button === 1 ? \"left\" : \"right\";\r\n\r\n        this.setInjected(true);\r\n\r\n        robot.mouseClick(buttonSide);\r\n    }\r\n\r\n\r\n}\r\n\r\nmodule.exports = Injector;","class Listener {\r\n    constructor(button, injector, settings, callback) {\r\n        this.settings = settings;\r\n        this.button = button;\r\n        this.injector = injector\r\n        this.max = settings.max\r\n        this.callback = callback\r\n\r\n        this.clickStart = new Date();\r\n        this.lastClick = new Date();\r\n        this.clicks = 0;\r\n        this.totalclicks = 0;\r\n    }\r\n\r\n    increaseMax(amount) {\r\n        this.max += amount;\r\n        this.callback(this.button, this.max)\r\n    }\r\n\r\n    decreaseMax(amount) {\r\n        this.max -= amount;\r\n        this.callback(this.button, this.max)\r\n    }\r\n\r\n    hookEvent(event) {\r\n        if (event.button === this.button) {\r\n            this.listenClick()\r\n        }\r\n    }\r\n\r\n    get cps() {\r\n        let currentDate = new Date();\r\n\r\n        let sinceStart = (currentDate - this.clickStart) / 1000\r\n\r\n        return this.clicks / (sinceStart)\r\n    }\r\n\r\n    get totalcps() {\r\n        let currentDate = new Date();\r\n\r\n        let sinceStart = (currentDate - this.clickStart) / 1000\r\n\r\n        return this.totalclicks / (sinceStart)\r\n    }\r\n\r\n    listenClick() {\r\n        this.totalclicks++;\r\n\r\n        //Kill injected click events\r\n        if (this.injector.injected()) {\r\n            this.injector.setInjected(false);\r\n            return;\r\n        }\r\n\r\n        this.clicks++\r\n        let current = new Date();\r\n\r\n        //Reset on break\r\n        if (current - this.lastClick >= this.settings.timeout) {\r\n            this.clicks = 0;\r\n            this.totalclicks = 0;\r\n            this.clickStart = current;\r\n            this.lastClick = new Date();\r\n            return;\r\n        }\r\n\r\n        //Calc CPS\r\n        let cps = this.cps\r\n        let totalcps = this.totalcps\r\n\r\n        //Inject clicks\r\n        if (cps > this.settings.minSpeed && this.clicks >= 3) {\r\n            if (totalcps > this.max) return;\r\n            this.injector.addClick(cps);\r\n        }\r\n\r\n        this.lastClick = new Date();\r\n    }\r\n}\r\n\r\nmodule.exports = Listener;","var process = require('process');\r\nvar cp = require('child_process');\r\nvar fs = require('fs');\r\nconst ioHook = require('iohook');\r\n\r\nconst Injector = require(\"./injector\");\r\nconst Listener = require(\"./listener\");\r\n\r\nfunction app(callback) {\r\n    const settings = {\r\n        \"leftSettings\": {\r\n            \"minSpeed\": 6,\r\n            \"minClicks\": 3,\r\n            \"clickVariation\": 0.1,\r\n            \"timeout\": 500,\r\n            \"max\": 19\r\n        },\r\n        \"rightSettings\": {\r\n            \"minSpeed\": 6,\r\n            \"minClicks\": 2,\r\n            \"clickVariation\": 0.1,\r\n            \"timeout\": 500,\r\n            \"max\": 18\r\n        },\r\n    }\r\n\r\n\r\n    //Create hook\r\n    ioHook.on(\"mousedown\", (event) => {\r\n        leftListener.hookEvent(event);\r\n        rightListener.hookEvent(event);\r\n    })\r\n\r\n    let ctrlPressed = false;\r\n    let altPressed = false;\r\n\r\n    function exitProgram() {\r\n        process.exit();\r\n    }\r\n\r\n    ioHook.on(\"keydown\", (event) => {\r\n        switch (event.keycode) {\r\n            case 41:\r\n                if (ctrlPressed) exitProgram();\r\n                break;\r\n            case 29:\r\n                ctrlPressed = true;\r\n                break;\r\n            case 56: \r\n                altPressed = true;\r\n                break;\r\n            case 12:\r\n                if (ctrlPressed && altPressed) leftListener.decreaseMax(1);\r\n                break;\r\n            case 13:\r\n                if (ctrlPressed && altPressed) leftListener.increaseMax(1);\r\n                break;\r\n            case 26:\r\n                if (ctrlPressed && altPressed) rightListener.decreaseMax(1);\r\n                break;\r\n            case 27:\r\n                if (ctrlPressed && altPressed) rightListener.increaseMax(1);\r\n                break;\r\n\r\n        }\r\n    })\r\n\r\n    ioHook.on(\"keyup\", (event) => {\r\n        switch (event.keycode) {\r\n            case 29:\r\n                ctrlPressed = false;\r\n                break;\r\n            case 56: \r\n                altPressed = false;\r\n                break;\r\n        }\r\n    })\r\n\r\n    //Create Injectors\r\n    let leftInjector = new Injector(1, settings.leftSettings)\r\n    let rightInjector = new Injector(2, settings.rightSettings)\r\n\r\n    //Register listeners\r\n    let leftListener = new Listener(1, leftInjector, settings.leftSettings, callback)\r\n    let rightListener = new Listener(2, rightInjector, settings.rightSettings, callback)\r\n\r\n    callback(1, settings.leftSettings.max);\r\n    callback(2, settings.rightSettings.max);\r\n\r\n    //Stark hook\r\n    ioHook.start();\r\n}\r\n\r\nmodule.exports = app","module.exports = require(\"iohook\");","module.exports = require(\"robotjs\");","module.exports = require(\"child_process\");","module.exports = require(\"fs\");","module.exports = require(\"process\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(404);\n"],"names":["robot","module","exports","constructor","button","settings","this","injectedClick","clickChance","setInjected","val","injected","addClick","cps","Math","random","timeout","finalTimeout","clickVariation","setTimeout","performClick","bind","buttonSide","mouseClick","injector","callback","max","clickStart","Date","lastClick","clicks","totalclicks","increaseMax","amount","decreaseMax","hookEvent","event","listenClick","sinceStart","totalcps","current","minSpeed","process","ioHook","Injector","Listener","on","leftListener","rightListener","ctrlPressed","altPressed","keycode","exit","leftInjector","rightInjector","start","require","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__"],"sourceRoot":""}